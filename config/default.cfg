# (C) 2008-2016 Potsdam Institute for Climate Impact Research (PIK),
# authors, and contributors see AUTHORS file
# This file is part of MAgPIE and licensed under GNU AGPL Version 3 
# or later. See LICENSE file or go to http://www.gnu.org/licenses/
# Contact: magpie@pik-potsdam.de

##################
#### SETTINGS ####
##################

cfg <- list()

#### Main settings ####

#short description of the actual run
cfg$title <- "H12_setup1"

#### input settings ####

#which input data sets should be used?
cfg$input <- c("GLUES2-sresa2-constant_co2-miub_echo_g_ERB_rev22.1_h100_690d3718e151be1b450b394c1064b1c5.tgz",
               "magpie_690d3718e151be1b450b394c1064b1c5_rev2.04.tgz",
			   "additional_data_rev1.01.tgz")
				
#A list of repositories from which the input data should be downloaded.
#The download script will go through the list until the specific input file 
#is found and move then to the next input file starting again with the first 
#repository in the list
cfg$repositories <- c("/p/projects/landuse/data/input/archive",
                      "/p/projects/rd3mod/inputdata/output",
					  "scp://cluster.pik-potsdam.de/p/projects/landuse/data/input/archive",
					  "scp://cluster.pik-potsdam.de/p/projects/rd3mod/inputdata/output")


#Should input data be downloaded from source even if cfg$input did not change?
cfg$force_download <- FALSE

# Settings for the yield calibration
# * (TRUE): Yield calibration will be performed
# * (ifneeded): Yield calibration will only be executed if input data is downloaded from repository
# * (FALSE): Yield calibration will not be performed
cfg$recalibrate <- "ifneeded"     # def = ifneeded
# Up to which accuracy shall be recalibrated?
cfg$calib_accuracy<-0.1
# What is the maximum number of iterations if the precision goal is not reached?
cfg$calib_maxiter<-20
# factor determining how much the new calibration factor influences the result (0-1)
cfg$damping_factor<-0.98
# area reference data for calibration
# * (fao): FAO data in MAgPIE regions (currently incompatible with flexible regions)
# * (hyde1990): Hyde data in MAgPIE regions (currently incompatible with flexible regions)
# * (magpie_input): Cellular model initialization area (pm_land_start - compatible with flexible regions)
cfg$area_input <- "magpie_input"     # def = magpie_input


#### magpie.gms settings ####
cfg$gms <- list()

#Set number of time steps (1-16) or type "less_TS" for remind time steps
cfg$gms$c_timesteps <- 3

#use of gdx files
cfg$gms$sm_use_gdx <- 2
#*       sm_use_gdx = 0    gdx are written but not loaded
#*       sm_use_gdx = 1    gdx are written and at the beginning one gdx file is
#*                        loaded but only for the first step. This is useful
#*                        if the expected difference in the outputs is less
#*                        between two time steps than the difference between
#*                        old and new simulations for the same time step
#*       sm_use_gdx = 2    gdx are written every time steps loads its own gdx file
#*                        as input. This is the best choice if there were only
#*                        minor changes compared to the last model run.
#*       sm_use_gdx = -1   no gdx files are loaded but initial values defined in
#*                        calculations.gms are used (gdx files are still written)

#maximal number of solve iterations 
cfg$gms$sm_maxiter <- 100

#maximum allowed difference between objective of linear and nonlinear solve (mio. US$)
#solve iteration will be either stopped when this target is reached OR if sm_maxiter
#is reached!
cfg$gms$s_maxdiff <- 1000

# **-------------------------------------------------------------------------------
# ***                           MODULES
# ***------------------------------------------------------------------------------

# ***---------------------    10_land   -------------------------------------------
# * (feb15): default land realization
cfg$gms$land <- "feb15"          # def = feb15

# ** land constraint for land-based mitigation (currently 2nd gen. bioenergy and afforestation)
# *share of each grid cell available for land-based mitigation (possible values 0-1)
cfg$gms$s10_lu_miti_shr <- 1              # def = 1


# ***---------------------    11_costs   ------ ------------------------------------
# * (default): default cost realization
cfg$gms$costs <- "default"          # def = default

# ***---------------------    12_interest_rate ------------------------------------
# * (glo_jan16): global interest rates - annuity calculated with macro m_annuity
cfg$gms$interest_rate <- "glo_jan16"          # def = glo_jan16

# * interest rate scenario: low, medium, high or mixed (currently only in combination with "glo")
cfg$gms$c12_interest_rate <- "medium"          # def = "medium"

# * investment time horizon (years)
cfg$gms$sm_invest_horizon <- 30                # def = 30


# ***---------------------    13_tc    ---------------------------------------------
# * (endo_JUN16): endogenous technological change with full cost accounting
# * (off): no endogenous technological change
cfg$gms$tc <- "endo_JUN16"              # def = endo_JUN16

# * tc cost scenario: low, medium or high 
cfg$gms$c13_tccost <- "medium"

# ***---------------------    14_yield    ------------------------------------------
# * (biocorrect): yields calculations with additional correction for bioenergy crops
cfg$gms$yields <- "biocorrect"          # def = biocorrect

# * yield scenario 
# *   options:   cc  (climate change)
# *             nocc (no climate change)
cfg$gms$c14_yields_scenario  <- "nocc"   # def = "nocc"

# ***---------------------    15_food    -----------------------------------------
# * (elastic_oct16): elastic food demand
# * (exo_flexreg_apr16): exogenous demand for flexreg version
cfg$gms$food <- "exo_flexreg_apr16"                # def = exo_flexreg_apr16

# * food scenario	
# *   options:   SSP: "SSP1", "SSP2", "SSP3", "SSP4", "SSP5"
# *             SRES: "A1", "A2", "B1", "B2"
# *            OTHER: "PB" (planetary boundaries)
cfg$gms$c15_food_scenario <- "SSP2"    # def = SSP2
cfg$gms$c15_pop_scenario <- "pop_SSP2"    # def = SSP2
cfg$gms$c15_gdp_scenario <- "gdp_SSP2"    # def = SSP2


# ***---------------------    16_demand    -----------------------------------------
# * (sector_may15): default for flexible regions
cfg$gms$demand <- "sector_may15"                # def = sector_may15
 
# ***---------------------    17_production    -----------------------------------------
# * (flexreg_apr16): default production aggregation
cfg$gms$production <- "flexreg_apr16"          # def = flexreg_apr16

# ***---------------------    18_residues    --------------------------------------
# * (flexreg_apr16): detailed residue calculations
# * (off): off
cfg$gms$residues <- "flexreg_apr16"            # def = flexreg_apr16

# ***---------------------    20_processing    ------------------------------------
# * (sector_may15): processing calculations
# * (coupleproducts_feb17): processing with couple products
# * (off): off
cfg$gms$processing <- "coupleproducts_feb17"          # def = sector_may15


# ***---------------------    21_trade    -----------------------------------------
# * (free_apr23): free trade without restrictions
# * (off): no trade at all
# * (selfsuff_flexreg_dev): self-sufficiency based trade (under development)
cfg$gms$trade <- "selfsuff_flexreg_dev"                 # def = selfsuff_flexreg_dev

# * trade balance reduction scenario
# * (regionalized): regionalized trade balance reduction
# * (globalized): globalized trade balance reduction
# * (fragmented): fragmented trade balance reduction
cfg$gms$c21_trade_liberalization  <- "regionalized" # def = regionalized

# ***---------------------    30_crop    -----------------------------------------
# * (endo_jun13): dynamic cropland
cfg$gms$crop    <- "endo_jun13"               # def = endo_jun13

# ***---------------------    31_past    ---------------------------------------
# * (static): static pasture
# * (endo_jun13): dynamic pasture
cfg$gms$past <- "endo_jun13"               # def = endo_jun13

# ***---------------------    32_forestry    ---------------------------------------
# * (static_sep16) : static forestry sector
# * (affore_aug15): includes the option to prescribe afforestation rates
# * (affore_vegc_apr16): only vegc is considered for ghg pricing
# * (affore_vegc_bph_dev): under development
cfg$gms$forestry  <- "static_sep16"              # def = static_sep16

# Switch for afforestation policy based on historic afforestation rates (on = 1, off = 0) (works only with affore_aug15)
cfg$gms$s32_afforest_policy <- 0              # def = 0

# maximum total global afforestation in Mha (Inf = no constraint)
cfg$gms$s32_max_aff_area <- 0              # def = 0

# Switch to determine whether afforestation should be limited to certain latitudinal zones
# * ("unrestricted"): No regions excluded
# * ("noboreal"): Exclude boreal regions >50deg N
# * ("onlytropical"): Afforestation only in tropical areas 20deg S-20deg N
cfg$gms$c32_aff_mask <- "noboreal"            # def = "noboreal"

# ***---------------------    33_forest    ------------------------------------------
# * (static): static forest
# * (endo_threshold_aug15): dynamic forest with carbon density threshold of 20tC per ha and 
#                           option to limit annual deforestation rates 
cfg$gms$forest    <- "endo_threshold_aug15"            # def = endo_threshold_aug15

#Switch for making the forest area dependent on a carbon density threshold of 20 tC/ha (on = 1, off = 0)
cfg$gms$sm_forest_degradation <- 0			  # def = 0

# Switch for upper limit on deforestation based on historic deforestation rates (on = 1, off = 0) (works only with endo_threshold_aug15)
cfg$gms$s33_deforest_policy <- 0              # def = 0

# * forest protection scenario. 
# * (low)
# * (medium)
# * (high)
cfg$gms$c33_forest_protection <- "medium"  # def = medium
	
# * share of FRA2010 forest protection share applicable to ifft 
cfg$gms$s33_save_ifft <- 0.75              # def = 0.75

# percentage of forest protected within these conservation priority areas
cfg$gms$s33_protect_share <- 0.75              # def = 0.75

# ***---------------------    34_urban   ---------------------------------------------
# * (static): static urban
cfg$gms$urban   <- "static"                # def = static

# ***---------------------    35_other    --------------------------------------------
# * (static): static other land
# * (endo_threshold_aug15): Other land with carbon density threshold of 20tC per ha
cfg$gms$other  <- "endo_threshold_aug15"               # def = endo_threshold_aug15

#protect other land in regions with afforestation (makes sense in combination with cfg$gms$s32_afforest_policy = 1)
cfg$gms$s35_protect_other <- 0

# ***---------------------    37_land taxation    ------------------------------------
# * (off_jul16): no land taxation
# * (stock_jul16): tax on stock of agricultural land
# * (exp_jul16): tax on expansion of agricultural land
cfg$gms$land_tax <- "off_jul16"     # def = off_jul16

# ***---------------------    38_factor_costs    --------------------------------------
# * (fixed_per_ton_nov16): factor costs fixed per ton
cfg$gms$factor_costs <- "fixed_per_ton_nov16"               # def = fixed_per_ton_nov16

# ***---------------------    39_landconversion    ------------------------------------
# * (gdp_scaled_jun13): gdp based land conversion costs (new parametrization)
# * (gdp_vegetation_dev): land clearing costs based on GDP and vegetation carbon density. Land establishment costs based on GDP
cfg$gms$landconversion <- "gdp_scaled_jun13"     # def = gdp_scaled_jun13

# land conversion cost setting (gdp_vegetation_dev realization)
# * options: "low", "medium", "high"
cfg$gms$c39_cost_scenario <- "medium"

# ***---------------------    40_transport    -----------------------------------------
# * (off): no transport costs
# * (gtap_nov12): transport costs applied to crops and ruminant livestock products
# *               calibrated based on magpie-output (dynamic pasture) to match GTAP data
cfg$gms$transport <- "gtap_nov12"                   # def = gtap_nov12

# ***---------------------    41_area_equipped_for_irrigation    -----------------------
# * (static): no expansion
# * (endo): endogenous, cost driven expansion
# * (endo_APR13): updated endogenous expansion
cfg$gms$area_equipped_for_irrigation <- "endo_apr13"   # def = endo_APR13

# ***---------------------    42_water_demand   ----------------------------------------
# * (agr_sector_aug13): fixed fraction of water available is reserved for other uses
# * (all_sector_aug13): industrial, eletricity and domestic demand are retrieved from WATERGAP data.
cfg$gms$water_demand<- "agr_sector_aug13"            # def = agr_sector_aug13

# * water demand scenario 
# *   options:   cc  (climate change)
# *             nocc (no climate change)
cfg$gms$c42_watdem_scenario  <- "nocc"   # def = "nocc"
		
# * Choice of fraction of available water that is not 
# * available for agriculture (only affects agr_sector_aug13 realization)
cfg$gms$s42_reserved_fraction <- 0.5         # def = 0.5
		
# * Scenario for non agricultural water demand from WATERGAP (only affects all_sector_aug13 realization)
# * (1): SSP2 
# * (2): A2
# * (3): B1
cfg$gms$s42_watdem_nonagr_scenario <- 1      # def = 1
		
# * Switch to determine the irrigation efficiency scenario
# * (1): global static value
# * (2): regional static values from gdp regression
# * (3): gdp driven increase
cfg$gms$s42_irrig_eff_scenario <- 1           # def = 1
			
# * Environmental flow protection policy
# * (off): no EFP policy
# * (on): global EFP policy starting in 2015
# * (mixed): EFP policy starting in 2015 only in hic regions
cfg$gms$c42_env_flow_policy <- "off"             # def = "off"

# * Environmental flow protection scenario
# * (0): don't consider environmental flows.
# *      s42_env_flow_base_fraction and
# *      s42_env_flow_fraction have no effect.
# * (1): Reserve a certain fraction of available water
# *      specified by s42_env_flow_fraction for
# *      environmental flows
# *  (2): Each grid cell receives its own value for
# *       environmental flow protection based on LPJ
# *       results and a calculation algorithm by Smakhtin 2004.
# *       s42_env_flow_fraction has no effect.
cfg$gms$s42_env_flow_scenario <- 2             # def = 2

# * Fraction of available water that is reserved for the environment in case of a protection policy
# * In which regions and timesteps a protection policy is in place is determined in the file EFR_protection_policy.csv 
# * in the input folder of the 42_water_demand module
cfg$gms$s42_env_flow_fraction <- 0.2           # def = 0.2
		
# * Fraction of available water that is reserved for the environment in case of missing protection policy
cfg$gms$s42_env_flow_base_fraction <- 0.05      # def = 0.05

# ***---------------------    43_water_availability   ----------------------------------------
# * (total_water_aug13): surface and ground water resources available
cfg$gms$water_availability <- "total_water_aug13"    # def = total_water_aug13

# * water availability scenario 
# *   options:   cc  (climate change)
# *             nocc (no climate change)
cfg$gms$c43_watavail_scenario  <- "nocc"   # def = "nocc"

# ***-------------------------    45_climate   --------------------------------------------
# * (static): static koeppengeiger climate classification data
cfg$gms$climate <- "static"    # def = static

# ***-------------------------    50_nr_soil_budget   --------------------------------------------
# * (off): off
# * (exoeff_aug16): exogenous nr efficiency
cfg$gms$nr_soil_budget <- "exoeff_aug16"    # def = off

# *   options:   snupe55_55_starty1990,snupe60_60_starty1990,snupe65_70_starty1990,
# *   snupe65_70_starty2010,snupe60_60_starty2010,snupe55_60_starty2010,
# *   snupe70_75_starty2010,snupe75_80_starty2010,snupe80_85_starty2010
cfg$gms$c50_scen_neff <- "snupe65_70_starty2010"   # def = snupe65_70_starty2010

# ***---------------------    51_nitrogen   ----------------------------------------
# * (ipcc2006_sep16):
# * (off): 
cfg$gms$nitrogen    <- "ipcc2006_sep16"                 # def = ipcc2006_sep16

# ***---------------------    52_carbon   -------------------------------------------
# * (normal_sep16): standard carbon calculations
# * (off): carbon calculations deactivated
cfg$gms$carbon <- "normal_sep16"                       # def = normal_sep16

# * carbon scenario 
# *   options:   cc  (climate change)
# *             nocc (no climate change)
cfg$gms$c52_carbon_scenario  <- "nocc"   # def = "nocc"

# ***---------------------    53_methane   ------------------------------------------
# * (ipcc2006_flexreg_apr16): IPCC 1996 methodology
# * (off): methane calculations deactivated 
cfg$gms$methane  <- "ipcc2006_flexreg_apr16"    # def = ipcc2006_flexreg_apr16

# ***---------------------    54_phosphorus   ---------------------------------------
# * (off): calculations deactivated
cfg$gms$phosphorus  <- "off"                     # def = off

# ***---------------------    55_awms   ---------------------------------------
# * (ipcc2006_aug16): animal waste management systems (based on IPCC 2006 Guidelines)
# * (off): deactivated animal waste management
cfg$gms$awms  <- "ipcc2006_aug16"                     # def = ipcc2006_aug16

# ***---------------------    56_ghg_policy   ---------------------------------------------
# * (price_sep16): GHG emission pricing - same annuity as used in other modules
cfg$gms$ghg_policy  <- "price_sep16"                     # def = price_sep16

# * pollutant price scenario (only in comb with "price")
cfg$gms$c56_pollutant_prices <- "SSP2-Ref-SPA0"         # def = "SSP2-Ref-SPA0"
# *   options:  SSP1-Ref-SPA0, SSP2-Ref-SPA0, SSP5-Ref-SPA0,
# *             SSP1-26-SPA0, SSP1-37-SPA0, SSP1-45-SPA0,
# *             SSP2-26-SPA0, SSP2-37-SPA0, SSP2-45-SPA0, SSP2-60-SPA0,
# *             SSP5-26-SPA0, SSP5-37-SPA0, SSP5-45-SPA0, SSP5-60-SPA0,
# *             SSP1-26-SPA1, SSP1-37-SPA1, SSP1-45-SPA1,
# *             SSP2-26-SPA2, SSP2-37-SPA2, SSP2-45-SPA2, SSP2-60-SPA2,
# *             SSP5-26-SPA5, SSP5-37-SPA5, SSP5-45-SPA5, SSP5-60-SPA5,
# *             coupling

# * emission policies
# * options: none, all, ssp
cfg$gms$c56_emis_policy <- "ssp" 		# def = ssp

# * afforestation carbon pool pricing
# * options: none, all, all50, vegc50
cfg$gms$c56_aff_policy <- "vegc50"		# def = vegc50

# * Treatment of negative costs originating from negative co2 emissions
# * reward negative co2 emissions (-Inf) or not (0)
cfg$gms$s56_reward_neg_emis <- 0			# def = 0

# ***---------------------    57_maccs   ---------------------------------------------
# * (on_sep16): maccs for non-CO2 emission mitigation activated
# * (off_jul16): maccs for non-CO2 emission mitigation deactivated
cfg$gms$maccs  <- "on_sep16"                     # def = on_sep16
 
# ***---------------------    58_carbon_removal   ------------------------------------
# * (off_sep16): deactivated
cfg$gms$carbon_removal <- "off_sep16"                  # def = off_sep16

# ***-------------------------    59_som   --------------------------------------------
# * (off): off
# * (cellpool_aug16): soil organic matter pool on cellular level
cfg$gms$som <- "off"    # def = off

# ***---------------------    60_bioenergy   ------------------------------------------
# * (standard_flexreg_apr16): fixed 1st generation demand based on IIASA, scenario-depending 2nd gen 
# *             demand which can be either fullfilled by begr or betr
cfg$gms$bioenergy <- "standard_flexreg_apr16"                  # def = standard_flexreg_apr16

# * 1st generation bioenergy demand scenarios based on IIASA
# * (phaseout2020): increase until 2020, followed by phaseout until 2050
# * (const2020): increase until 2020, constant thereafter
# * (const2030): increase until 2030, constant thereafter
cfg$gms$c60_1stgen_biodem <- "const2020"               # def = const2020

# * 2nd generation bioenergy demand scenarios for standard realization
# *   options:  SSP1-Ref-SPA0, SSP2-Ref-SPA0, SSP5-Ref-SPA0,
# *             SSP1-26-SPA0, SSP1-37-SPA0, SSP1-45-SPA0,
# *             SSP2-26-SPA0, SSP2-37-SPA0, SSP2-45-SPA0, SSP2-60-SPA0,
# *             SSP5-26-SPA0, SSP5-37-SPA0, SSP5-45-SPA0, SSP5-60-SPA0,
# *             SSP1-26-SPA1, SSP1-37-SPA1, SSP1-45-SPA1,
# *             SSP2-26-SPA2, SSP2-37-SPA2, SSP2-45-SPA2, SSP2-60-SPA2,
# *             SSP5-26-SPA5, SSP5-37-SPA5, SSP5-45-SPA5, SSP5-60-SPA5,
# *             coupling
cfg$gms$c60_2ndgen_biodem <- "SSP2-Ref-SPA0"     # def = SSP2-Ref-SPA0
	
# * bioenergy demand level
# * (1): regional 
# * (0): global
cfg$gms$c60_biodem_level <- 1                     # def = 1


# ***---------------------    62_material   ------------------------------------------
# * (off): off
# * (exo_flexreg_apr16): 
cfg$gms$material <- "exo_flexreg_apr16"

cfg$gms$c62_material_scenario <- "SSP2" 



# ***---------------------    70_livestock   ------------------------------------------
# * (fbask_jan16):
cfg$gms$livestock <- "fbask_jan16"                  # def = fbask_jan16


# ***-------------------    80_optimization -------------------------------------------
# * (nlp_only_glo_jan15): solve procedure solving the whole, nonlinear problem at once (global mode)
# * (lp_nlp_glo_jan15): alternative approach in which the nonlinear terms are fixed first so that
# *           the linear problem can be solved before the full problem is solved (global mode)
# * (lp_only_glo_feb16): purely linear solve in which all nonlinear terms are just fixed
# *           in contrast to the other realizations this will only solve the linear model! (global mode)
cfg$gms$optimization <- "lp_nlp_glo_jan15"                 # def = lp_nlp_glo_jan15

# ***---------------------    90_presolve   -------------------------------------------
# * (bioenergy_feb12): a presolve with no bioenergy production at all. This additional
# *       solve is required to calculate bioenergy costs
# * (off): deactivated
cfg$gms$presolve <- "off"                         # def = off

#*******************************END MODULE SETUP*********************************


#### Other settings (e.g. clustering, gdx files, ...): ####

#Decide whether the runs should be run sequentially (TRUE), or in parallel (FALSE)
#NA means that this decision is taken automatically (typically on cluster = FALSE and locally = TRUE)
cfg$sequential <- NA

#How should log information be treated? (0:no output, 2:write to full.log 3:show in console)
cfg$logoption <- 2

#Should output.R generate output?
#Just list the name of the output scripts that should be used
#At the moment there are several R-scripts located in scripts/output/
cfg$output <- c("report","validation","emissions")

#Set the format for the results folder, type string :date: in order to use the current time stamp in the folder name (e.g. "results:date:") use :title: to use the current title in the folder name
cfg$results_folder <- "output/:title::date:"

#Which files should be copied into the output folder?
cfg$files2export <- list()
#Files that should be copied before MAgPIE is started
cfg$files2export$start <- c("input/info.txt",
							"modules/10_land/input/avl_land.cs3",
							"input/spatial_header.rda",
							"scripts/run_submit/submit.R",
			                "scripts/run_submit/submit.sh",
							"scripts/run_submit/rename_gdx.R",
							".Rprofile",
							"config/nlpec.opt",
							"input/*.spam")
#Files that should be copied after the MAgPIE run is finished 
cfg$files2export$end <- NULL

#Should the model run in debug mode? Currently debug mode leads to the following changes
# download script will copy files from input to destination folder instead of moving it
# allowing to check whether something in the move/copy process goes wrong
cfg$debug <- FALSE


#### User specific settings: ####
# For the following settings it is recommended to leave everything set to NULL
# and provide this information instead by creating a .Rprofile file in the
# users home directory which provides the corresponding settings as global
# R options using the following syntax:
# options(username="mr.X", ssh_private_keyfile="/path/to/ssh_key/file")
# to check where your home directory is just type path.expand("~") in R.

#Personal username for the repository from which data should be retrieved
cfg$username <- NULL

#SSH key for the repository from which data should be retrieved
cfg$ssh_private_keyfile <- NULL

############################################################
